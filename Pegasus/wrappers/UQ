#!/bin/bash

# send stderr to stdout
exec 2>&1

set -e

BUILDING_LINE=$1
BID=$2

# untar motions files
(
    # Wait for lock on .untarlock (fd 200) for 1 hour
    flock -x -w 3600 200

    # only untar once
    if [ ! -e ".codes-untared-stamp" ]; then
        touch .codes-untared-stamp
        tar xzf codes.tar.gz
        # save some disk space
        rm -f codes.tar.gz
    fi

    # only untar once
    if [ ! -e ".motions-untared-stamp" ]; then
        touch .motions-untared-stamp
        tar xzf motions.tar.gz
        # save some diskspace
        rm -f motions.tar.gz
    fi
    
    # only untar once
    if [ ! -e ".dakota-untared-stamp" ]; then
        touch .dakota-untared-stamp
        tar xzf dakota-6.8-release-public-rhel7.x86_64.tar.gz
        # save some diskspace
        rm -f dakota-6.8-release-public-rhel7.x86_64.tar.gz
    fi
) 200>.untarlock

# expected output files
touch $BID-BIM.json
touch $BID-EDP.json
touch $BID-DL.json

# set up Dakota
export LD_LIBRARY_PATH=$PWD/dakota-6.8.0.Linux.x86_64/lib:$PWD/dakota-6.8.0.Linux.x86_64/bin:$LD_LIBRARY_PATH
export PATH=$PWD/dakota-6.8.0.Linux.x86_64/bin:$PATH

# set up OpenSEES
export PATH=$PWD/Pegasus/task-files/uq:$PATH

cd Workflow

# delete old leftovers
rm -f $BID-*

# create a bid specific json driver
../Pegasus/task-files/uq/update-workflow-json $BUILDING_LINE $BID >$BID-Pegasus.json

set +e
python ./RegionalEarthquakeSimulation.py run $BID-Pegasus.json WorkflowApplications.json >$BID-log.txt 2>&1
FAILURES=$?
set -e

cat $BID-log.txt
LOGFILE=`grep "Log file:" $BID-log.txt | sed 's;.*Log file: ;;'`

# sometimes RegionalEarthquakeSimulation.py will signal success, but we files might be missing
if [ ! -s $BID-BIM.json ]; then
    FAILURES=$(( $FAILURES + 1 ))
fi

if [ $FAILURES != 0 ]; then
    echo "Due to non-zero exit code, displaying $LOGFILE ..."
    cat $LOGFILE
    echo
    echo
    cat $BID-Pegasus.json
    echo
    echo
    ls -l $BID-*
    exit $FAILURES
fi
rm -f $BID-log.txt $LOGFILE

# create the DL csv
../finalProcessing/readDLs $BID $BID $BID-DL.csv

# put the files in the expected location
mv $BID-BIM.json ../
mv $BID-EDP.json ../
mv $BID-DL.json ../
mv $BID-DL.csv ../

# let's clean up to make sure our directories are not filled up with old files
rm -f $BID-*


